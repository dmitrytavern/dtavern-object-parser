import{_ as e,c as a,o as t,a as r}from"./app.0827ef81.js";const g=JSON.parse('{"title":"Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"changelog.md","lastUpdated":1686237529000}'),o={name:"changelog.md"},i=r('<h1 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-hidden="true">#</a></h1><h2 id="v2-0-1" tabindex="-1">v2.0.1 <a class="header-anchor" href="#v2-0-1" aria-hidden="true">#</a></h2><p>This patch fixes the following problem:</p><ul><li>When specifying <code>required: false</code> and <code>default</code> options for a property schema, after parsing, the returned value type does not contain the <strong>undefined</strong> type.</li><li>Updated generics for <code>PropertySchema</code>, <code>PropertySchemaRaw</code> types and <code>.createPropertySchema()</code>, <code>.usePropertySchema()</code> functions.</li><li>Added new types <code>PropertyDefaultRaw</code> and <code>PropertyDefaultNormalize</code>.</li><li>Updated documentation for the patch. See: <ul><li><a href="./api/types/property-schema">PropertySchema</a></li><li><a href="./api/types/property-schema-raw">PropertySchemaRaw</a></li><li><a href="./api/types/property-schema-return">PropertySchemaReturn</a></li><li><a href="./guide/advanced/typescript">TypeScript Support</a></li></ul></li></ul><h2 id="v2-0-0" tabindex="-1">v2.0.0 <a class="header-anchor" href="#v2-0-0" aria-hidden="true">#</a></h2><p>The main goal of this release is to add the ability to validate nested objects. However, almost everything had to be rewritten in the process. From new:</p><ul><li><strong>Updated public API</strong> - core functions have been added for schema generation and asynchronous parsing, and the old main function has been changed. Utilities for specific use have also been added.</li><li><strong>Add support nested objects</strong> - a new way of creating schemas, as well as a modified parsing algorithm, made it possible to parse nested objects.</li><li><strong>Improve typescript support</strong> - more complex typing now allows you to determine the type of an object and its properties by schema type.</li><li><strong>Improve documentation</strong> - added a vitepress static site generator for documentation, as well as a fully described public API of the library, with all examples and a detailed description of the use.</li></ul><p><strong>BREAKING CHANGE:</strong> defineOptions function deleted. Use .parse().</p><h2 id="v1-1-0" tabindex="-1">v1.1.0 <a class="header-anchor" href="#v1-1-0" aria-hidden="true">#</a></h2><ul><li>Fixed the bug with async functions.</li><li>Add keys checker for a property schema settings.</li></ul><h2 id="v1-0-1" tabindex="-1">v1.0.1 <a class="header-anchor" href="#v1-0-1" aria-hidden="true">#</a></h2><ul><li>Added metadata to the package.</li></ul><h2 id="v1-0-0" tabindex="-1">v1.0.0 <a class="header-anchor" href="#v1-0-0" aria-hidden="true">#</a></h2><p>Initial release.</p>',14),d=[i];function n(s,c,l,h,p,u){return t(),a("div",null,d)}const m=e(o,[["render",n]]);export{g as __pageData,m as default};
