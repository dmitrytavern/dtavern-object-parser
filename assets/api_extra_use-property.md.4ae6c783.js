import{_ as e,o as a,c as s,O as r}from"./chunks/framework.4cdeba06.js";const A=JSON.parse('{"title":".useProperty(object)","description":"","frontmatter":{},"headers":[],"relativePath":"api/extra/use-property.md","filePath":"api/extra/use-property.md","lastUpdated":1687021949000}'),o={name:"api/extra/use-property.md"},t=r(`<h1 id="useproperty-object" tabindex="-1">.useProperty(object) <a class="header-anchor" href="#useproperty-object" aria-label="Permalink to &quot;.useProperty(object)&quot;">​</a></h1><p>Safe usage of a property schema. If the object is a property schema, return it, otherwise calls <a href="./../property">.property()</a>.</p><ul><li><code>object</code> - a <a href="./../types/property-schema">PropertySchema</a> or a <a href="./../types/property-schema-raw">PropertySchemaRaw</a> object.</li></ul><h2 id="general-usage" tabindex="-1">General usage <a class="header-anchor" href="#general-usage" aria-label="Permalink to &quot;General usage&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> options </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> schema </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">property</span><span style="color:#A6ACCD;">(options)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">useProperty</span><span style="color:#A6ACCD;">(options)</span></span>
<span class="line"><span style="color:#A6ACCD;">parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">useProperty</span><span style="color:#A6ACCD;">(schema)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; returns equal schemas</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In this example, the schemas are identical in properties, but <strong>they refer to different addresses in memory</strong>. Therefore, they are <strong>not completely identical</strong>. Be careful not to cause a memory leak.</p></div><h2 id="error-handling" tabindex="-1">Error handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error handling&quot;">​</a></h2><p>All errors can be from <a href="./../property">.property()</a>.</p>`,8),n=[t];function p(l,c,i,y,h,d){return a(),s("div",null,n)}const m=e(o,[["render",p]]);export{A as __pageData,m as default};
